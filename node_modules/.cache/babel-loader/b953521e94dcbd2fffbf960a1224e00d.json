{"ast":null,"code":"var _jsxFileName = \"/Users/wang2_alan/Desktop/sharara-app/src/contexts/RegionContext.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { regionReducer } from '../reducers/regionReducer';\nimport countyData from './data.js';\nexport const RegionContext = createContext();\n\nconst RegionContextProvider = props => {\n  const [regions, regionDispatch] = useReducer(regionReducer, [], () => {\n    console.log(countyData);\n    var myObject = JSON.parse(countyData);\n    const localData = localStorage.getItem('regions');\n    console.log(localData);\n    return countyData ? JSON.parse(countyData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('regions', JSON.stringify(regions));\n  }, [regions]);\n  return /*#__PURE__*/React.createElement(RegionContext.Provider, {\n    value: {\n      regions,\n      regionDispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default RegionContextProvider;","map":{"version":3,"sources":["/Users/wang2_alan/Desktop/sharara-app/src/contexts/RegionContext.js"],"names":["React","createContext","useReducer","useEffect","regionReducer","countyData","RegionContext","RegionContextProvider","props","regions","regionDispatch","console","log","myObject","JSON","parse","localData","localStorage","getItem","setItem","stringify","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,UAAP,MAAuB,WAAvB;AAEA,OAAO,MAAMC,aAAa,GAAGL,aAAa,EAAnC;;AAEP,MAAMM,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4BR,UAAU,CAACE,aAAD,EAAgB,EAAhB,EAAoB,MAAM;AAClEO,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,QAAIQ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWV,UAAX,CAAf;AACA,UAAMW,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAlB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACA,WAAOX,UAAU,GAAGS,IAAI,CAACC,KAAL,CAAWV,UAAX,CAAH,GAA2B,EAA5C;AACH,GAN2C,CAA5C;AAQAF,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgCL,IAAI,CAACM,SAAL,CAAeX,OAAf,CAAhC;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACA,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,KAAK,CAACa,QADZ,CADJ;AAKH,CAlBD;;AAoBA,eAAed,qBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport { regionReducer } from '../reducers/regionReducer';\nimport countyData from './data.js'\n\nexport const RegionContext = createContext();\n\nconst RegionContextProvider = (props) => {\n    const [regions, regionDispatch] = useReducer(regionReducer, [], () => {\n        console.log(countyData)\n        var myObject = JSON.parse(countyData);\n        const localData = localStorage.getItem('regions');\n        console.log(localData)\n        return countyData ? JSON.parse(countyData): []\n    });\n\n    useEffect(() => {\n        localStorage.setItem('regions', JSON.stringify(regions))\n    }, [regions]);\n\n    return (\n        <RegionContext.Provider value={{regions, regionDispatch}}>\n            { props.children }\n        </RegionContext.Provider>\n    )\n}\n\nexport default RegionContextProvider;"]},"metadata":{},"sourceType":"module"}