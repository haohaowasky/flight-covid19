{"ast":null,"code":"import { v1 as uuid } from 'uuid';\nexport const regionReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_REGION':\n      return [...state, {\n        name: action.region.name,\n        status: action.region.status,\n        id: uuid()\n      }];\n\n    case 'REMOVE_REGION':\n      return state.filter(region => region.id !== action.id);\n\n    case 'DERISK_REGION':\n      let deRiskRegion = state.filter(region => region.id === action.id);\n      deRiskRegion[0].status = \"risk: high\";\n      console.log(\"down risk deducer called\", deRiskRegion);\n      return [...state, deRiskRegion];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/wang2_alan/Desktop/sharara-app/src/reducers/regionReducer.js"],"names":["v1","uuid","regionReducer","state","action","type","name","region","status","id","filter","deRiskRegion","console","log"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAW;AACdG,QAAAA,IAAI,EAAEF,MAAM,CAACG,MAAP,CAAcD,IADN;AAEdE,QAAAA,MAAM,EAACJ,MAAM,CAACG,MAAP,CAAcC,MAFP;AAGdC,QAAAA,EAAE,EAAER,IAAI;AAHM,OAAX,CAAP;;AAKJ,SAAK,eAAL;AACI,aAAOE,KAAK,CAACO,MAAN,CAAaH,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcL,MAAM,CAACK,EAA5C,CAAP;;AACJ,SAAK,eAAL;AACI,UAAIE,YAAY,GAAGR,KAAK,CAACO,MAAN,CAAaH,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcL,MAAM,CAACK,EAA5C,CAAnB;AACAE,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBH,MAAhB,GAAyB,YAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,YAAxC;AACA,aAAO,CAAC,GAAGR,KAAJ,EAAWQ,YAAX,CAAP;;AACJ;AACI,aAAOR,KAAP;AAfR;AAiBH,CAlBM","sourcesContent":["import { v1 as uuid } from 'uuid';\n\nexport const regionReducer = (state, action) => {\n    switch(action.type) {\n        case 'ADD_REGION':\n            return [...state, {\n                name: action.region.name,\n                status:action.region.status,\n                id: uuid()\n            }]\n        case 'REMOVE_REGION':\n            return state.filter(region => region.id !== action.id)\n        case 'DERISK_REGION':\n            let deRiskRegion = state.filter(region => region.id === action.id)\n            deRiskRegion[0].status = \"risk: high\"\n            console.log(\"down risk deducer called\", deRiskRegion)\n            return [...state, deRiskRegion]\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}