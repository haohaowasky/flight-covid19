{"ast":null,"code":"var _jsxFileName = \"/Users/wang2_alan/Desktop/react-hook-demo/booklist/src/contexts/BookContext.js\";\nimport React, { createContext, useReducer } from 'react';\nimport uuid from 'uuid/v1';\nimport { bookReducer } from '../reducers/bookReducer';\nexport const BookContext = createContext();\n\nconst BookContextProvider = props => {\n  const [books, dispatch] = useReducer(bookReducer, []); // const addBook = (title, author) => {\n  //     setBooks([...books, {title, author, id:uuid() }]);\n  // };\n  // const removeBook = (id) => {\n  //     setBooks(books.filter(book => book.id !== id));\n  // };\n\n  return /*#__PURE__*/React.createElement(BookContext.Provider, {\n    value: {\n      books,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default BookContextProvider;","map":{"version":3,"sources":["/Users/wang2_alan/Desktop/react-hook-demo/booklist/src/contexts/BookContext.js"],"names":["React","createContext","useReducer","uuid","bookReducer","BookContext","BookContextProvider","props","books","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,WAAD,EAAc,EAAd,CAApC,CADmC,CAGnC;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,KAAK,CAACG,QADZ,CADJ;AAKH,CAhBD;;AAkBA,eAAeJ,mBAAf","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport uuid from 'uuid/v1';\nimport { bookReducer } from '../reducers/bookReducer';\n\nexport const BookContext = createContext();\n\nconst BookContextProvider = (props) => {\n    const [books, dispatch] = useReducer(bookReducer, []);\n\n    // const addBook = (title, author) => {\n    //     setBooks([...books, {title, author, id:uuid() }]);\n    // };\n\n    // const removeBook = (id) => {\n    //     setBooks(books.filter(book => book.id !== id));\n    // };\n\n    return (\n        <BookContext.Provider value={{books, dispatch}}>\n            { props.children }\n        </BookContext.Provider>\n    )\n}\n\nexport default BookContextProvider;"]},"metadata":{},"sourceType":"module"}