{"ast":null,"code":"var _jsxFileName = \"/Users/wang2_alan/Desktop/sharara-app/src/contexts/RegionContext.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { regionReducer } from '../reducers/regionReducer';\nimport countyData from './data.js';\nimport request from 'request';\nexport const RegionContext = createContext();\n\nconst getRequest = async url => {\n  return new Promise((resolve, reject) => {\n    request.get(url, (err, res, body) => {\n      resolve(body);\n    });\n  });\n};\n\nconst RegionContextProvider = props => {\n  const [regions, regionDispatch] = useReducer(regionReducer, [], () => {\n    console.log(countyData);\n    const localData = localStorage.getItem('regions');\n    console.log(localData);\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('regions', JSON.stringify(regions));\n  }, [regions]);\n  return /*#__PURE__*/React.createElement(RegionContext.Provider, {\n    value: {\n      regions,\n      regionDispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default RegionContextProvider;","map":{"version":3,"sources":["/Users/wang2_alan/Desktop/sharara-app/src/contexts/RegionContext.js"],"names":["React","createContext","useReducer","useEffect","regionReducer","countyData","request","RegionContext","getRequest","url","Promise","resolve","reject","get","err","res","body","RegionContextProvider","props","regions","regionDispatch","console","log","localData","localStorage","getItem","JSON","parse","setItem","stringify","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,MAAMC,aAAa,GAAGN,aAAa,EAAnC;;AAEP,MAAMO,UAAU,GAAG,MAAOC,GAAP,IAAe;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,IAAAA,OAAO,CAACO,GAAR,CAAYJ,GAAZ,EAAiB,CAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjCL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACH,KAFD;AAGD,GAJM,CAAP;AAKH,CAND;;AAQA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4BlB,UAAU,CAACE,aAAD,EAAgB,EAAhB,EAAoB,MAAM;AAClEiB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACA,UAAMkB,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAlB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,WAAOA,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA0B,EAA1C;AACH,GAL2C,CAA5C;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,YAAY,CAACI,OAAb,CAAqB,SAArB,EAAgCF,IAAI,CAACG,SAAL,CAAeV,OAAf,CAAhC;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACA,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,KAAK,CAACY,QADZ,CADJ;AAKH,CAjBD;;AAmBA,eAAeb,qBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport { regionReducer } from '../reducers/regionReducer';\nimport countyData from './data.js'\nimport request from 'request'\n\nexport const RegionContext = createContext();\n\nconst getRequest = async (url) => {\n    return new Promise((resolve, reject) => {\n      request.get(url, (err, res, body) => {\n          resolve(body)        \n      })\n    })\n}\n\nconst RegionContextProvider = (props) => {\n    const [regions, regionDispatch] = useReducer(regionReducer, [], () => {\n        console.log(countyData)\n        const localData = localStorage.getItem('regions');\n        console.log(localData)\n        return localData ? JSON.parse(localData): []\n    });\n\n    useEffect(() => {\n        localStorage.setItem('regions', JSON.stringify(regions))\n    }, [regions]);\n\n    return (\n        <RegionContext.Provider value={{regions, regionDispatch}}>\n            { props.children }\n        </RegionContext.Provider>\n    )\n}\n\nexport default RegionContextProvider;"]},"metadata":{},"sourceType":"module"}